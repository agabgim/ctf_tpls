# This will configure and build nemesis
# User can configure the source path by speficfying NEMESIS_SRC_DIR,
#    the download path by specifying NEMESIS_URL, or the installed 
#    location by specifying NEMESIS_INSTALL_DIR


# Intialize download/src/install vars
SET( NEMESIS_BUILD_DIR "${CMAKE_BINARY_DIR}/NEMESIS-prefix/src/NEMESIS-build" )
IF ( NEMESIS_URL ) 
    MESSAGE_TPL("   NEMESIS_URL = ${NEMESIS_URL}")
    SET( NEMESIS_SRC_DIR "${CMAKE_BINARY_DIR}/NEMESIS-prefix/src/NEMESIS-src" )
    SET( NEMESIS_CMAKE_URL            "${NEMESIS_URL}"     )
    SET( NEMESIS_CMAKE_DOWNLOAD_DIR   "${NEMESIS_SRC_DIR}" )
    SET( NEMESIS_CMAKE_SOURCE_DIR     "${NEMESIS_SRC_DIR}" )
    SET( NEMESIS_CMAKE_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/nemesis" )
    SET( CMAKE_BUILD_NEMESIS TRUE )
ELSEIF ( NEMESIS_SRC_DIR )
    VERIFY_PATH("${NEMESIS_SRC_DIR}")
    MESSAGE_TPL("   NEMESIS_SRC_DIR = ${NEMESIS_SRC_DIR}")
    SET( NEMESIS_CMAKE_URL            ""                  )
    SET( NEMESIS_CMAKE_DOWNLOAD_DIR   ""                  )
    SET( NEMESIS_CMAKE_SOURCE_DIR     "${NEMESIS_SRC_DIR}" )
    SET( NEMESIS_CMAKE_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/nemesis" )
    SET( CMAKE_BUILD_NEMESIS TRUE )
ELSEIF ( NEMESIS_INSTALL_DIR ) 
    SET( NEMESIS_CMAKE_INSTALL_DIR "${NEMESIS_INSTALL_DIR}" )
    SET( CMAKE_BUILD_NEMESIS FALSE )
ELSE()
    MESSAGE(FATAL_ERROR "Please specify NEMESIS_SRC_DIR, NEMESIS_URL, or NEMESIS_INSTALL_DIR")
ENDIF()
SET( NEMESIS_INSTALL_DIR "${NEMESIS_CMAKE_INSTALL_DIR}" )
MESSAGE_TPL( "   NEMESIS_INSTALL_DIR = ${NEMESIS_INSTALL_DIR}" )
FILE( APPEND "${CMAKE_INSTALL_PREFIX}/TPLs.cmake" "SET(NEMESIS_INSTALL_DIR \"${NEMESIS_INSTALL_DIR}\")\n" )


# Configure nemesis
IF ( CMAKE_BUILD_NEMESIS )
    SET( CONFIGURE_OPTIONS "${CMAKE_ARGS};-DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX}/nemesis" )
    SET( CONFIGURE_OPTIONS "${CONFIGURE_OPTIONS};-DEXODUS_LIBRARY:PATH=${CMAKE_INSTALL_PREFIX}/exodusii/lib/libexoIIv2c.a" )
    SET( CONFIGURE_OPTIONS "${CONFIGURE_OPTIONS};-DEXODUS_INCLUDE_DIR:PATH=${CMAKE_INSTALL_PREFIX}/exodusii/include" )
    SET( CONFIGURE_OPTIONS "${CONFIGURE_OPTIONS};-DHDF5HL_LIBRARY:PATH=${CMAKE_INSTALL_PREFIX}/hdf5/lib/libhdf5_hl.a" )
    SET( CONFIGURE_OPTIONS "${CONFIGURE_OPTIONS};-DHDF5_LIBRARY:PATH=${CMAKE_INSTALL_PREFIX}/hdf5/lib/libhdf5.a" )
    SET( CONFIGURE_OPTIONS "${CONFIGURE_OPTIONS};-DNETCDF_INCLUDE_DIR:PATH=${CMAKE_INSTALL_PREFIX}/netcdf/include" )
    SET( CONFIGURE_OPTIONS "${CONFIGURE_OPTIONS};-DNETCDF_LIBRARY:PATH=${CMAKE_INSTALL_PREFIX}/netcdf/lib/libnetcdf.a" )
    SET( CONFIGURE_OPTIONS "${CONFIGURE_OPTIONS};-DNETCDF_NCDUMP:PATH=${CMAKE_INSTALL_PREFIX}/netcdf/bin/ncdump" )
    SET( CONFIGURE_OPTIONS "${CONFIGURE_OPTIONS};-DZ_LIBRARY:PATH=${CMAKE_INSTALL_PREFIX}/zlib/lib/libz.a" )
ENDIF()


# Build nemesis
IF ( CMAKE_BUILD_NEMESIS )
    EXTERNALPROJECT_ADD(
        NEMESIS
        URL                 "${NEMESIS_CMAKE_URL}"
        DOWNLOAD_DIR        "${NEMESIS_CMAKE_DOWNLOAD_DIR}"
        SOURCE_DIR          "${NEMESIS_CMAKE_SOURCE_DIR}"
        UPDATE_COMMAND      ""
        BUILD_IN_SOURCE     0
        INSTALL_DIR         ${CMAKE_INSTALL_PREFIX}/nemesis
        CMAKE_ARGS          "${CONFIGURE_OPTIONS}"
        BUILD_COMMAND       make install -j ${PROCS_INSTALL} VERBOSE=1
        DEPENDS             HDF5 ZLIB NETCDF EXODUSII
        LOG_DOWNLOAD 1   LOG_UPDATE 1   LOG_CONFIGURE 1   LOG_BUILD 1   LOG_TEST 1   LOG_INSTALL 1
    )
    ADD_TPL_SAVE_LOGS( NEMESIS )
    ADD_TPL_CLEAN( NEMESIS )
ELSE()
    ADD_TPL_EMPTY( NEMESIS )
ENDIF()



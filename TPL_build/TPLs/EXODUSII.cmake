# This will configure and build exodusii
# User can configure the source path by speficfying EXODUSII_SRC_DIR,
#    the download path by specifying EXODUSII_URL, or the installed 
#    location by specifying EXODUSII_INSTALL_DIR


# Intialize download/src/install vars
SET( EXODUSII_BUILD_DIR "${CMAKE_BINARY_DIR}/EXODUSII-prefix/src/EXODUSII-build" )
IF ( EXODUSII_URL ) 
    MESSAGE_TPL("   EXODUSII_URL = ${EXODUSII_URL}")
    SET( EXODUSII_SRC_DIR "${CMAKE_BINARY_DIR}/EXODUSII-prefix/src/EXODUSII-src" )
    SET( EXODUSII_CMAKE_URL            "${EXODUSII_URL}"     )
    SET( EXODUSII_CMAKE_DOWNLOAD_DIR   "${EXODUSII_SRC_DIR}" )
    SET( EXODUSII_CMAKE_SOURCE_DIR     "${EXODUSII_SRC_DIR}" )
    SET( EXODUSII_CMAKE_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/exodusii" )
    SET( CMAKE_BUILD_EXODUSII TRUE )
ELSEIF ( EXODUSII_SRC_DIR )
    VERIFY_PATH("${EXODUSII_SRC_DIR}")
    MESSAGE_TPL("   EXODUSII_SRC_DIR = ${EXODUSII_SRC_DIR}")
    SET( EXODUSII_CMAKE_URL            ""                  )
    SET( EXODUSII_CMAKE_DOWNLOAD_DIR   ""                  )
    SET( EXODUSII_CMAKE_SOURCE_DIR     "${EXODUSII_SRC_DIR}" )
    SET( EXODUSII_CMAKE_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/exodusii" )
    SET( CMAKE_BUILD_EXODUSII TRUE )
ELSEIF ( EXODUSII_INSTALL_DIR ) 
    SET( EXODUSII_CMAKE_INSTALL_DIR "${EXODUSII_INSTALL_DIR}" )
    SET( CMAKE_BUILD_EXODUSII FALSE )
ELSE()
    MESSAGE(FATAL_ERROR "Please specify EXODUSII_SRC_DIR, EXODUSII_URL, or EXODUSII_INSTALL_DIR")
ENDIF()
SET( EXODUSII_INSTALL_DIR "${EXODUSII_CMAKE_INSTALL_DIR}" )
MESSAGE_TPL( "   EXODUSII_INSTALL_DIR = ${EXODUSII_INSTALL_DIR}" )
FILE( APPEND "${CMAKE_INSTALL_PREFIX}/TPLs.cmake" "SET(EXODUSII_INSTALL_DIR \"${EXODUSII_INSTALL_DIR}\")\n" )


# Configure exodusii
IF ( CMAKE_BUILD_EXODUSII )
    SET( CONFIGURE_OPTIONS "${CMAKE_ARGS};-DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX}/exodusii" )
    SET( CONFIGURE_OPTIONS "${CONFIGURE_OPTIONS};-DHDF5HL_LIBRARY:PATH=${CMAKE_INSTALL_PREFIX}/hdf5/lib/libhdf5_hl.a" )
    SET( CONFIGURE_OPTIONS "${CONFIGURE_OPTIONS};-DHDF5_LIBRARY:PATH=${CMAKE_INSTALL_PREFIX}/hdf5/lib/libhdf5.a" )
    SET( CONFIGURE_OPTIONS "${CONFIGURE_OPTIONS};-DNETCDF_INCLUDE_DIR:PATH=${CMAKE_INSTALL_PREFIX}/netcdf/include" )
    SET( CONFIGURE_OPTIONS "${CONFIGURE_OPTIONS};-DNETCDF_LIBRARY:PATH=${CMAKE_INSTALL_PREFIX}/netcdf/lib/libnetcdf.a" )
    SET( CONFIGURE_OPTIONS "${CONFIGURE_OPTIONS};-DNETCDF_NCDUMP:PATH=${CMAKE_INSTALL_PREFIX}/netcdf/bin/ncdump" )
    SET( CONFIGURE_OPTIONS "${CONFIGURE_OPTIONS};-DZ_LIBRARY:PATH=${CMAKE_INSTALL_PREFIX}/zlib/lib/libz.a" )
ENDIF()


# Build exodusii
IF ( CMAKE_BUILD_EXODUSII )
    EXTERNALPROJECT_ADD(
        EXODUSII
        URL                 "${EXODUSII_CMAKE_URL}"
        DOWNLOAD_DIR        "${EXODUSII_CMAKE_DOWNLOAD_DIR}"
        SOURCE_DIR          "${EXODUSII_CMAKE_SOURCE_DIR}"
        UPDATE_COMMAND      ""
        BUILD_IN_SOURCE     0
        INSTALL_DIR         ${CMAKE_INSTALL_PREFIX}/exodusii
        CMAKE_ARGS          "${CONFIGURE_OPTIONS}"
        BUILD_COMMAND       make install -j ${PROCS_INSTALL} VERBOSE=1
        DEPENDS             HDF5 ZLIB NETCDF
        LOG_DOWNLOAD 1   LOG_UPDATE 1   LOG_CONFIGURE 1   LOG_BUILD 1   LOG_TEST 1   LOG_INSTALL 1
    )
    ADD_TPL_SAVE_LOGS( EXODUSII )
    ADD_TPL_CLEAN( EXODUSII )
ELSE()
    ADD_TPL_EMPTY( EXODUSII )
ENDIF()



# This will configure and build netcdf
# User can configure the source path by speficfying NETCDF_SRC_DIR,
#    the download path by specifying NETCDF_URL, or the installed 
#    location by specifying NETCDF_INSTALL_DIR


# Intialize download/src/install vars
SET( NETCDF_BUILD_DIR "${CMAKE_BINARY_DIR}/NETCDF-prefix/src/NETCDF-build" )
IF ( NETCDF_URL ) 
    MESSAGE_TPL("   NETCDF_URL = ${NETCDF_URL}")
#    SET( NETCDF_SRC_DIR "${CMAKE_BINARY_DIR}/NETCDF-prefix/src/NETCDF-src" )
    SET( NETCDF_CMAKE_URL            "${NETCDF_URL}"     )
    SET( NETCDF_CMAKE_DOWNLOAD_DIR   "${NETCDF_BUILD_DIR}" )
    SET( NETCDF_CMAKE_SOURCE_DIR     "${NETCDF_BUILD_DIR}" )
    SET( NETCDF_CMAKE_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/netcdf-${NETCDF_VERSION}" )
    SET( CMAKE_BUILD_NETCDF TRUE )
ELSEIF ( NETCDF_SRC_DIR )
    VERIFY_PATH("${NETCDF_SRC_DIR}")
    MESSAGE_TPL("   NETCDF_SRC_DIR = ${NETCDF_SRC_DIR}")
    SET( NETCDF_CMAKE_URL            "${NETCDF_SRC_DIR}" )
    SET( NETCDF_CMAKE_DOWNLOAD_DIR   "${NETCDF_BUILD_DIR}" )
    SET( NETCDF_CMAKE_SOURCE_DIR     "${NETCDF_BUILD_DIR}" )
    SET( NETCDF_CMAKE_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/netcdf-${NETCDF_VERSION}" )
ELSEIF ( NETCDF_INSTALL_DIR ) 
    SET( NETCDF_CMAKE_INSTALL_DIR "${NETCDF_INSTALL_DIR}" )
    SET( CMAKE_BUILD_NETCDF FALSE )
ELSE()
    MESSAGE(FATAL_ERROR "Please specify NETCDF_SRC_DIR, NETCDF_URL, or NETCDF_INSTALL_DIR")
ENDIF()


IF ( CMAKE_BUILD_NETCDF )
  SET( NETCDF_INSTALL_DIR "${NETCDF_CMAKE_INSTALL_DIR}" )
  MESSAGE_TPL( "   NETCDF_INSTALL_DIR = ${NETCDF_INSTALL_DIR}" )
  FILE( APPEND "${CMAKE_INSTALL_PREFIX}/TPLs.cmake" "SET(NETCDF_INSTALL_DIR \"${NETCDF_INSTALL_DIR}\")\n" )


# Configure netcdf
#IF ( CMAKE_BUILD_NETCDF )
  SET( CONFIGURE_OPTIONS )
  SET( CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --prefix=${NETCDF_INSTALL_DIR} )
  SET( CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --with-hdf5=${HDF5_INSTALL_DIR} )
  SET( CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --with-zlib=${ZLIB_INSTALL_DIR} )
  SET( CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --enable-parallel-tests  )
  SET( NETCDF_CFLAGS "${CMAKE_C_FLAGS} -I${CMAKE_INSTALL_PREFIX}/hdf5-${HDF5_VERSION}/include -I${CMAKE_INSTALL_PREFIX}/zlib-${ZLIB_VERSION}/include" )
  SET( NETCDF_LDFLAGS "${LDFLAGS} -L/${CMAKE_INSTALL_PREFIX}/hdf5-${HDF5_VERSION}/lib -L/${CMAKE_INSTALL_PREFIX}/zlib-${ZLIB_VERSION}/lib" )
  SET( NETCDF_LIBS -ldl )
     IF ( ENABLE_SHARED )
        SET( CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --enable-shared )
     ELSE()
        SET( CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --disable-shared )
     ENDIF()
     IF ( ENABLE_STATIC )
        SET( CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --enable-static )
     ELSE()
        SET( CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --disable-static )
     ENDIF()
ENDIF()
SET(ENV_PARALLEL_VARS CC=${CMAKE_C_COMPILER} 'CPPFLAGS="-I${HDF5_INSTALL_DIR}/include -I${ZLIB_INSTALL_DIR}/include"' 'LDFLAGS="-L${HDF5_INSTALL_DIR}/lib -L${ZLIB_INSTALL_DIR}/lib"' )



# Build netcdf
IF ( CMAKE_BUILD_NETCDF )
    EXTERNALPROJECT_ADD(
        NETCDF
        URL                 "${NETCDF_CMAKE_URL}"
        DOWNLOAD_DIR        "${NETCDF_CMAKE_DOWNLOAD_DIR}"
        SOURCE_DIR          "${NETCDF_CMAKE_SOURCE_DIR}"

        UPDATE_COMMAND      ""
#        CONFIGURE_COMMAND   ${NETCDF_CMAKE_SOURCE_DIR}/configure ${CONFIGURE_OPTIONS} CC=${CMAKE_C_COMPILER} CPPFLAGS=-I${HDF5_INSTALL_DIR}/include -I${ZLIB_INSTALL_DIR}/include LDFLAGS=-L${HDF5_INSTALL_DIR}/lib -L${ZLIB_INSTALL_DIR}/lib
#        CONFIGURE_COMMAND   ${ENV_PARALLEL_VARS} ${NETCDF_CMAKE_SOURCE_DIR}/configure ${CONFIGURE_OPTIONS} 
        CONFIGURE_COMMAND   ${NETCDF_SRC_DIR}/configure ${CONFIGURE_OPTIONS} 
                            CC=${CMAKE_C_COMPILER} CFLAGS=${NETCDF_CFLAGS} LDFLAGS=${NETCDF_LDFLAGS} LIBS=${NETCDF_LIBS}
        BUILD_COMMAND       make -j ${PROCS_INSTALL} VERBOSE=1
        BUILD_IN_SOURCE     0
        INSTALL_COMMAND     make install -j${PROCS_INSTALL} VERBOSE=1
        DEPENDS             HDF5
        LOG_DOWNLOAD 1   LOG_UPDATE 1   LOG_CONFIGURE 1   LOG_BUILD 1   LOG_TEST 1   LOG_INSTALL 1
    )
    ADD_TPL_SAVE_LOGS( NETCDF )
    ADD_TPL_CLEAN( NETCDF )
ENDIF()


